{"version":3,"sources":["Context.js","component/Header.js","hook/useHover.js","component/Image.js","pages/Photos.js","utils/index.js","component/CartItems.js","pages/Cart.js","App.js","index.js"],"names":["Context","React","createContext","ContextProvider","children","useState","allPhotos","setAllPhotos","cartItems","setCartItems","useEffect","localStorage","getItem","fetch","then","res","json","data","localImages","JSON","parse","setItem","stringify","localCart","Provider","value","toggleFavorite","id","updatedArr","map","photo","isFavorite","addToCart","newItem","prevItems","removeFromCart","filter","item","Header","useContext","to","className","length","useHover","ishover","setIsHover","ref","useRef","enter","leave","current","addEventListener","Image","img","isHover","src","url","onClick","some","ele","Photos","props","images","index","i","CartItems","width","Cart","isPlacing","setIsPlacing","carItemsElement","totalCostDisplay","toLocaleString","style","currency","setTimeout","console","log","App","exact","path","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.4a6ca4fc.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nfunction ContextProvider({ children }) {\r\n  const [allPhotos, setAllPhotos] = useState([]);\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const url =\r\n    \"https://raw.githubusercontent.com/bobziroll/scrimba-react-bootcamp-images/master/images.json\";\r\n\r\n    useEffect(() => {\r\n      if(localStorage.getItem('allPhotos') === null ){\r\n        fetch(url)\r\n          .then(res => res.json())\r\n          .then(data => setAllPhotos(data))\r\n       }\r\n       else{\r\n        let localImages = JSON.parse(localStorage.getItem(\"allPhotos\"));\r\n        setAllPhotos(localImages)\r\n       }\r\n\r\n       if (localStorage.getItem(\"cartItems\") === null ) {\r\n        localStorage.setItem(\"cartItems\", JSON.stringify([]));\r\n      } else{\r\n      let localCart = JSON.parse(localStorage.getItem(\"cartItems\"));\r\n      setCartItems(localCart)}\r\n      \r\n      \r\n      \r\n      }, [])\r\n\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\r\n  }, [cartItems]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"allPhotos\", JSON.stringify(allPhotos));\r\n  }, [allPhotos])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  function removeFromCart(id) {\r\n    setCartItems((prevItems) => prevItems.filter((item) => item.id !== id));\r\n  }\r\n\r\n  function addToCart(newItem) {\r\n    setCartItems((prevItems) => [...prevItems, newItem]);\r\n  }\r\n\r\n  function toggleFavorite(id) {\r\n    const updatedArr = allPhotos.map((photo) => {\r\n      if (photo.id === id) {\r\n        return { ...photo, isFavorite: !photo.isFavorite };\r\n      }\r\n      return photo;\r\n    });\r\n    setAllPhotos(updatedArr);\r\n  }\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        allPhotos,\r\n        toggleFavorite,\r\n        addToCart,\r\n        cartItems,\r\n        setCartItems,\r\n        removeFromCart,\r\n      }}\r\n    >\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\nexport { ContextProvider, Context };\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {Context} from \"../Context\"\r\n\r\nfunction Header() {\r\n  const { cartItems } = useContext(Context);\r\n\r\n  return (\r\n    <header>\r\n      <Link to=\"/\">\r\n        <h2>Pic Some</h2>\r\n      </Link>\r\n      <Link to=\"/cart\">\r\n        <i\r\n          className={\r\n            cartItems.length > 0\r\n              ? \"ri-shopping-cart-fill ri-fw ri-2x\"\r\n              : \"ri-shopping-cart-line ri-fw ri-2x\"\r\n          }\r\n        ></i>\r\n      </Link>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React,{useState, useRef, useEffect} from \"react\"\r\n\r\n\r\nfunction useHover(){\r\n  const [ishover, setIsHover] = useState(false)\r\n  const ref = useRef(null)\r\n\r\n    function enter(){\r\n        setIsHover(true)\r\n    }\r\n\r\n    function leave(){\r\n        setIsHover(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        ref.current.addEventListener(\"mouseenter\", enter)\r\n        ref.current.addEventListener('mouseleave', leave)\r\n\r\n        // return ()=>{\r\n        //     ref.current.removeEventListener(\"mouseenter\", enter)\r\n        //     ref.current.removeEventListener(\"mouseleave\", leave)\r\n        // }\r\n    }, [])\r\n    \r\n\r\n    return [ishover, ref]\r\n}\r\n\r\nexport default useHover","import React, { useState, useContext } from \"react\";\r\nimport { Context } from \"../Context\";\r\nimport PropTypes from \"prop-types\";\r\nimport useHover from \"../hook/useHover\";\r\n\r\n\r\nfunction Image({ className, img }) {\r\n  const { toggleFavorite, addToCart, cartItems, removeFromCart } =\r\n    useContext(Context);\r\n  const [isHover, ref] = useHover();\r\n  // for toggleFavrotie, img.id is the id of that specific image div. When you click the heart icon\r\n  //  then it will map through the allphotos state in Context,to find out which isFavorite property should be changed\r\n  //  it will return a new state, then Photos component will rerender, then Image will rerender to show the heart\r\n  function heartIcon() {\r\n    if (img.isFavorite) {\r\n      return (\r\n        <i\r\n          onClick={() => toggleFavorite(img.id)}\r\n          className=\"ri-heart-fill favorite\"\r\n        ></i>\r\n      );\r\n    } else if (isHover) {\r\n      return (\r\n        <i\r\n          onClick={() => toggleFavorite(img.id)}\r\n          className=\"ri-heart-line favorite\"\r\n        ></i>\r\n      );\r\n    }\r\n  }\r\n  const CartIcon = isHover && (\r\n    <i onClick={() => addToCart(img)} className=\"ri-add-circle-line cart\"></i>\r\n  );\r\n\r\n  function cartIcon() {\r\n    if (cartItems.some((ele) => ele.id === img.id)) {\r\n      return (\r\n        <i\r\n          onClick={() => removeFromCart(img.id)}\r\n          className=\"ri-shopping-cart-fill cart\"\r\n        ></i>\r\n      );\r\n    } else if (isHover) {\r\n      return (\r\n        <i\r\n          onClick={() => addToCart(img)}\r\n          className=\"ri-add-circle-line cart\"\r\n        ></i>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref= {ref}\r\n      className={`${className} image-container`}\r\n    >\r\n      <img src={img.url} className=\"image-grid\" />\r\n      {heartIcon()}\r\n\r\n      {cartIcon()}\r\n    </div>\r\n  );\r\n}\r\n\r\nImage.propTypes = {\r\n  img: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n    isFavorite: PropTypes.bool,\r\n  }),\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Image;\r\n","import React, {useContext} from \"react\"\r\nimport Image from \"../component/Image\"\r\nimport {getClass} from \"../utils\"\r\nimport {Context} from \"../Context\"\r\n\r\nfunction Photos(props) {\r\n    const {allPhotos} = useContext(Context)\r\n    const images = allPhotos.map((img,index)=>(\r\n       <Image key = {img.id} img={img} className={getClass(index)} />\r\n    )) \r\n    return (\r\n\r\n        <main className=\"photos\">\r\n            {images}\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Photos","export function getClass(i) {\r\n    if (i % 5 === 0) {\r\n        return 'big';\r\n    }\r\n    else if (i % 6 === 0) {\r\n        return 'wide'\r\n    }\r\n}","import React, { useContext, useState } from \"react\";\r\nimport { Context } from \"../Context\";\r\nimport PropTypes from \"prop-types\";\r\nimport useHover from \"../hook/useHover\";\r\n\r\n// removefromcart is a method use filter to delete a specific image from the array,\r\n// it is imported from Context\r\n\r\nfunction CartItems({ item }) {\r\n  // const [isHovered, SetIsHovered] = useState(false)\r\n  const [ishover, ref] = useHover();\r\n  const { removeFromCart } = useContext(Context);\r\n\r\n  return (\r\n    <div className=\"cart-item\">\r\n      <i\r\n        ref={ref}\r\n        onClick={() => removeFromCart(item.id)}\r\n        className={ishover ? \"ri-delete-bin-fill\" : \"ri-delete-bin-line\"}\r\n      ></i>\r\n      <img src={item.url} width=\"130px\" />\r\n      <p>$2.99</p>\r\n    </div>\r\n  );\r\n\r\n\r\n\r\n}\r\n\r\n\r\nCartItems.propTypes = {\r\n    item: PropTypes.shape({\r\n        url: PropTypes.string.isRequired\r\n    })\r\n}\r\n\r\nexport default CartItems;\r\n","import React,{useContext, useState} from \"react\"\r\nimport CartItems from \"../component/CartItems\"\r\nimport { Context } from \"../Context\"\r\n\r\nfunction Cart() {\r\n    const {cartItems, setCartItems} = useContext(Context)\r\n    const [isPlacing, setIsPlacing] = useState(false)\r\n    const carItemsElement = cartItems.map(item=> \r\n        <CartItems key={item.id}  item={item}/>)\r\n\r\n    const totalCost = cartItems.length * 2.99\r\n    const totalCostDisplay = totalCost.toLocaleString(\"en-US\", {style: \"currency\", currency: \"USD\"})\r\n\r\n\r\n\r\nconst placeOrder= ()=>{\r\n    \r\n    setIsPlacing(true)\r\n    setTimeout(()=>{setIsPlacing(false);\r\n        console.log(\"Order placed!\");\r\n         setCartItems([])\r\n        }, 3000);\r\n\r\n}\r\n\r\n    return (\r\n        <main className=\"cart-page\">\r\n            <h1>Check out</h1>\r\n            {carItemsElement}\r\n            <p className=\"total-cost\">Total: {totalCostDisplay} </p>\r\n            { (cartItems.length>0)?\r\n            <div className=\"order-button\">\r\n                <button onClick={placeOrder}>{ isPlacing ? \"Ordering....\" : \"Place Order\"}</button>\r\n            </div>\r\n             : <p>You have no items in the cart</p>\r\n                }\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Cart","import React from \"react\" \nimport Header from \"./component/Header\";\nimport {Route,Switch} from \"react-router-dom\"\nimport Photos from \"./pages/Photos\"\nimport Cart from \"./pages/Cart\"\n\nfunction App() {\n  return (\n    <div>\n     <Header/>\n\n    <Switch>\n\n      <Route exact path = \"/\">\n    <Photos/>\n      </Route>\n\n      <Route path =\"/cart\">\n\n      <Cart/>\n      </Route>\n    </Switch>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\"\nimport {ContextProvider} from \"./Context\"\n\nReactDOM.render(\n\n  <ContextProvider>\n  <BrowserRouter  basename=\"/react-small-ecommerce-mock-website\">\n    <App />\n  </BrowserRouter>\n  </ContextProvider>\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}